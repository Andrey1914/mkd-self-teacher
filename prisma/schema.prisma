// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed     = "ts-node --transpile-only prisma/seed.ts"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  role      String   @default("user")
  createdAt DateTime @default(now())
}

model Lesson {
  id            String              @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  slug          String              @unique

  sections      Section[]
  glossary      GlossaryEntry[]
  
  dialogues     DialogueBlock[]
  paragraph     ParagraphBlock[]
  payAttention  PayAttentionBlock[]
  tables        TableBlock[]
  vocabulary    VocabularyEntry[]
}

model Section {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String
  title     String?
  content   Json?

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  tableEntries TableEntry[]
  exercises    Exercise[]

  @@index([lessonId])
}

model GlossaryEntry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  word      String
  meaning   String
  example   String?

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@index([lessonId])
}

model TableEntry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String?
  rows      Json

  sectionId String   @db.ObjectId
  section   Section  @relation(fields: [sectionId], references: [id])

  @@index([sectionId])
}

model Exercise {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId

  type      String
  slug      String
  title     String?
  prompt    String[] 
  content   Json

  lessonId  String   @db.ObjectId
  

  sectionId String?   @db.ObjectId
  section   Section?  @relation(fields: [sectionId], references: [id])

  @@index([sectionId])
}

model DialogueBlock {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   Json

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@index([lessonId])
}

model ParagraphBlock {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String           // grammar, rule, intro и т.п.
  subtype   String?          // verbs, interrogative-sentences, и т.п.
  content   Json

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@index([lessonId])
}

model PayAttentionBlock {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   Json

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@index([lessonId])
}

model TableBlock {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId

  type      String?
  category  String?   
  title     String?
  data      Json

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@index([lessonId])
}

model VocabularyEntry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  word      String
  translation String
  pronunciation String?
  example   String?

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@index([lessonId])
}
