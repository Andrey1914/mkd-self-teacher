// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  name     String?
  role     String   @default("user") // или "admin"
  createdAt DateTime @default(now())

  // Позже можно добавить связи с результатами, избранными уроками и т.д.
}

model Lesson {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  slug     String    @unique

  sections Section[]
  glossary GlossaryEntry[]
}

model Section {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String
  title     String?
  content   Json

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  tableEntries TableEntry[]
  exercises    Exercise[]

  @@index([lessonId])
}

model GlossaryEntry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  word      String
  meaning   String
  example   String?

  lessonId  String   @db.ObjectId
  lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@index([lessonId])
}

model TableEntry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String?
  rows      Json     

  sectionId String   @db.ObjectId
  section   Section  @relation(fields: [sectionId], references: [id])

  @@index([sectionId])
}

model Exercise {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  prompt    String   // задание
  answer    String   // правильный ответ
  options   Json?    // например, множественный выбор: ["...", "..."]

  sectionId String   @db.ObjectId
  section   Section  @relation(fields: [sectionId], references: [id])

  @@index([sectionId])
}